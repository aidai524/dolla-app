import { FlipCoinBg } from "./bg";
import { addThousandSeparator } from "@/utils/format/number";

export const FrontFace = ({ size = 62, thickness }: any) => {
  return (
    <div
      style={{
        transform: `translateZ(${thickness / 2}px)`
      }}
      className="absolute top-0 left-0 w-full h-full rounded-full backface-hidden flex items-center justify-center"
    >
      <FlipCoinBg size={size} className="absolute top-0 left-0 w-full h-full" />
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width={size * 0.32075471698113206}
        height={size * 0.635}
        viewBox="0 0 68 127"
        fill="none"
        className="relative z-[2]"
      >
        <path
          d="M66.8506 83.3944C66.8506 90.516 64.5009 96.6484 59.8016 101.792C55.1023 106.935 48.998 110.112 41.4885 111.322V123.541C41.4885 124.192 41.276 124.728 40.8509 125.146C40.4259 125.565 39.8828 125.775 39.2215 125.775H29.6576C29.0437 125.775 28.5123 125.554 28.0637 125.112C27.615 124.669 27.3907 124.146 27.3907 123.541V111.322C24.2735 110.903 21.2627 110.182 18.3581 109.158C15.4535 108.134 13.0566 107.098 11.1675 106.051C9.27829 105.004 7.53081 103.886 5.92502 102.699C4.31923 101.513 3.22116 100.64 2.63079 100.081C2.04043 99.5227 1.62717 99.1038 1.39103 98.8245C0.588132 97.847 0.540904 96.8928 1.24934 95.9619L8.54624 86.5362C8.87684 86.0708 9.41998 85.7915 10.1756 85.6984C10.8841 85.6053 11.4508 85.8148 11.8759 86.3268L12.0176 86.4664C17.3545 91.0745 23.0928 93.9837 29.2326 95.1939C30.9801 95.5662 32.7275 95.7524 34.475 95.7524C38.3006 95.7524 41.6656 94.7517 44.5702 92.7502C47.4748 90.7487 48.9271 87.9094 48.9271 84.2322C48.9271 82.9289 48.5729 81.6954 47.8645 80.5318C47.156 79.3681 46.3649 78.3906 45.4912 77.5993C44.6175 76.8081 43.236 75.9353 41.3469 74.9811C39.4577 74.0269 37.8991 73.2822 36.6712 72.7469C35.4432 72.2116 33.5541 71.4552 31.0037 70.4778C29.1617 69.733 27.7094 69.1512 26.6468 68.7323C25.5841 68.3133 24.1318 67.6966 22.2899 66.882C20.448 66.0675 18.9721 65.346 17.8622 64.7176C16.7523 64.0893 15.4181 63.2631 13.8595 62.239C12.301 61.215 11.0376 60.2259 10.0694 59.2717C9.10118 58.3175 8.07395 57.1771 6.98768 55.8506C5.90141 54.524 5.06309 53.1741 4.47273 51.801C3.88236 50.4279 3.38646 48.8802 2.98501 47.158C2.58356 45.4358 2.38284 43.6205 2.38284 41.7121C2.38284 35.2887 4.69707 29.6566 9.32552 24.8158C13.954 19.9749 19.9757 16.8563 27.3907 15.4599V2.89243C27.3907 2.28733 27.615 1.76368 28.0637 1.32149C28.5123 0.879298 29.0437 0.658203 29.6576 0.658203H39.2215C39.8828 0.658203 40.4259 0.867662 40.8509 1.28658C41.276 1.7055 41.4885 2.24078 41.4885 2.89243V15.1807C44.1806 15.4599 46.79 15.9952 49.3168 16.7865C51.8435 17.5778 53.898 18.3575 55.4802 19.1255C57.0623 19.8935 58.5619 20.7662 59.9787 21.7437C61.3956 22.7212 62.3166 23.3961 62.7416 23.7685C63.1667 24.1408 63.5209 24.4667 63.8043 24.7459C64.6072 25.5838 64.7253 26.4682 64.1585 27.3991L58.4202 37.5927C58.0423 38.2909 57.4992 38.6633 56.7908 38.7099C56.1296 38.8495 55.492 38.6866 54.878 38.2211C54.7363 38.0815 54.3939 37.8022 53.8508 37.3833C53.3076 36.9644 52.3867 36.3476 51.0879 35.5331C49.7891 34.7185 48.4076 33.9738 46.9435 33.2988C45.4794 32.6239 43.7201 32.0188 41.6657 31.4835C39.6112 30.9483 37.5921 30.6806 35.6085 30.6806C31.1217 30.6806 27.4615 31.6814 24.6278 33.6828C21.794 35.6843 20.3771 38.2677 20.3771 41.4328C20.3771 42.643 20.5779 43.7601 20.9793 44.7842C21.3807 45.8082 22.0774 46.774 23.0692 47.6817C24.061 48.5893 24.9938 49.3573 25.8675 49.9857C26.7413 50.6141 28.0637 51.3356 29.8348 52.1501C31.6059 52.9647 33.0345 53.5931 34.1208 54.0352C35.2071 54.4774 36.8601 55.1175 39.0799 55.9553C41.583 56.8862 43.4958 57.6193 44.8182 58.1546C46.1406 58.6899 47.9353 59.5044 50.2023 60.5983C52.4693 61.6921 54.2522 62.6812 55.551 63.5656C56.8498 64.45 58.3139 65.6137 59.9433 67.0566C61.5727 68.4995 62.8243 69.9774 63.698 71.4901C64.5718 73.0029 65.3156 74.7833 65.9296 76.8313C66.5436 78.8794 66.8506 81.0671 66.8506 83.3944Z"
          fill="url(#paint0_linear_1694_8755)"
          stroke="#CE952B"
        />
        <defs>
          <linearGradient
            id="paint0_linear_1694_8755"
            x1="33.8009"
            y1="0.658203"
            x2="33.8009"
            y2="125.775"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor="#C18B00" />
            <stop offset="1" stopColor="#E7B22A" />
          </linearGradient>
        </defs>
      </svg>
    </div>
  );
};

export const BackPointsFace = ({ size = 62, points = 100, thickness }: any) => {
  return Number(points) > 0 ? (
    <div
      style={{
        transform: `rotateY(180deg) translateZ(${thickness / 2}px)`
      }}
      className="absolute top-0 left-0 w-full h-full rounded-full backface-hidden flex items-center justify-center"
    >
      <FlipCoinBg size={size} className="absolute top-0 left-0 w-full h-full" />
      <span
        className="text-white font-[AlfaSlabOne] text-[14px] font-bold relative z-[2]"
        style={{
          WebkitTextStroke: "1px #BFA460",
          fontSize: size * 0.2
        }}
      >
        {addThousandSeparator(points.toString())}
      </span>
    </div>
  ) : (
    <div
      className="absolute top-0 left-0 w-full h-full bg-cover bg-center rounded-full backface-hidden"
      style={{
        backgroundImage: "url('/btc/flip-empty.svg')",
        transform: `rotateY(180deg) translateZ(${thickness / 2}px)`
      }}
    />
  );
};
